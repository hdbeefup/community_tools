 // <editor-fold defaultstate="collapsed" desc="DATA WRITING CODE">
                try {
                    rFile f = new rFile(out, "rw");
                    long totalsize = getFilesDataSize()+ getNamesSize();

                    f.setLength(totalsize);
                    f.writeIntLE(454718035);  // writes the SR header (1st part)
                    f.writeIntLE(176622093);  // writes the SR header (2nd part)
                    f.write("PACK".getBytes(), 0, 4);
                    f.writeIntLE(getNamesSize());

                    long done = 16;

                    pakFileListItem t[] = filelist.toArray(new pakFileListItem[0]);
                    int offset = 0;
                    int headoffset = 0;
                    for (int i = 0; i < t.length; i++) {

                        f.writeByte(t[i].baselen>0 ? t[i].baselen -1 : 0 );
                        if (t[i].path.length() > 0xff) {
                            throw new IOException("Pathname > 255 +(" + t[i].path +")");
                        }
                        String name=(t[i].baselen>0 ? "/" : "" ) + t[i].path.substring(t[i].baselen, t[i].path.length());
                        f.writeByte(name.length());
                        f.writeBytes(name);
                        f.writeIntLE(offset);

                        if (t[i].file != null) {
                            if (t[i].file.length() > 0x20000000) {
                                throw new IOException("Filesize > 512 MB (" + t[i].file.getPath() + ")");
                            }
                            f.writeIntLE((int) t[i].file.length());
                            offset += (int) t[i].file.length();
                        } else {
                            f.writeIntLE(0);
                        }

                        headoffset += name.length() + 15;
                        f.writeByte(!(i < t.length - 1) || t[i].file==null ? 0 : 1);
                        f.writeIntLE(i < t.length - 1 ? headoffset : 0);
                        done=headoffset;
                        if (listener != null)
                        listener.writeIsAdvancing((done * 100) / totalsize, "Writing PAK header...");
                    }
                    /*int headersize=(int)f.getFilePointer() -16;
                    f.seek(12);
                    f.writeIntLE(headersize);
                    f.seek(headersize+16);*/

                    rFile inputfile;

                    for (int i = 0; i < t.length; i++) {
                        if (t[i].file != null) {
                            inputfile = new rFile(t[i].file, "r");
                            int inputlen = (int) t[i].file.length();
                            byte buf[] = new byte[inputlen];
                            inputfile.read(buf);
                            f.write(buf);
                            inputfile.close();
                            done += inputlen;
                            if (listener != null) {
                                listener.writeIsAdvancing((done * 100) / totalsize,"Writing PAK data...");
                            }
                        }
                    }

                    if(encrypt)
                    {
                        f.seek(3);
                        f.writeByte(0x1C);

                        f.seek(16);
                        int tmp;
                        final int bufsize=4096;
                        byte buf[]=new byte[bufsize];

                        long datalen=(long)f.length()-16;
                        long blocks=datalen/bufsize;

                        for(long i=0;i<blocks;i++)
                        {
                            listener.writeIsAdvancing((i * 100 * bufsize) / datalen,"Encrypting PAK file...");
                            f.read(buf);
                            for(int j=0;j<bufsize;j++)
                                buf[j]=(byte)((int)buf[j] + 66);
                            f.moveCursor(-bufsize);
                            f.write(buf);
                        }

                        for(long i=0;i<datalen%bufsize;i++)
                        {
                            listener.writeIsAdvancing(((i + blocks*bufsize) * 100) / (datalen),"Encrypting PAK file...");
                            tmp=f.read()+66;

                            f.moveCursor(-1);
                            f.writeByte(tmp);
                        }
                    }

                    f.close();

                } catch (IOException ex) {
                    JOptionPane.showMessageDialog(null, "Error during writing: " + ex.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);
                    Logger.getLogger(pakFileList.class.getName()).log(Level.SEVERE, null, ex);
                }

                listener.writeStopped();
                // </editor-fold>